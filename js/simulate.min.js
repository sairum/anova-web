
var ui=(function(){'use strict';var factors=[],terms=[],combins=[],recoded=[],partial=[],effects=[];function createEffects(average,stdev){for(let i=0;i<factors.length;i++){factors[i].effects=[];for(let j=0;j<factors[i].true_levels;j++){let e=jStat.normal.sample(average,stdev);factors[i].effects.push(e-average);}}}
function addFactor(){let fname=document.getElementById('fname');let levels=document.getElementById('levels');let ftype=document.getElementById('ftype');let nestedin=document.getElementById('nestedin');let fnum=factors.length;let name=fname.value.trim().replace(/\s/gi,"_");if((name.match(/^[0-9a-z-.+_]+$/i))&&(name.length>0)){let duplicate=false;if(factors.length>0){for(let i=0;i<factors.length;i++){if(factors[i].name==name)duplicate=true;}}
if(!duplicate){let f={};f.name=name;f.orig_name=name;f.levels=parseInt(levels.value);f.true_levels=f.levels;f.ftype=ftype.value;f.nestedin=[];f.effects=[];f.lcodes=[...Array(f.levels).keys()];(nestedin.value=="-")?f.nested=false:f.nested=true;let newterms=[];if(!f.nested){newterms.push(name);for(let i=0;i<terms.length;i++)newterms.push(terms[i]+"*"+name);}else{f.ftype='random';f.name=name+"("+nestedin.value+")";let n=nestedin.value.split(/[(*)]/);n=n.filter(Boolean);for(let i=0;i<n.length;i++){let x=factors.find(obj=>obj.orig_name===n[i]);if(x!==undefined){let idx=factors.indexOf(x);f.nestedin.push(idx);f.true_levels*=x.levels;}}
f.lcodes=[...Array(f.true_levels).keys()];newterms.push(f.name);for(let i=0;i<terms.length;i++){if(interacts(nestedin.value,terms[i]))
newterms.push(terms[i]+"*"+f.name);}}
for(let i=0;i<newterms.length;i++)terms.push(newterms[i]);let model=document.getElementById('model');model.innerHTML="X = &mu; + "+terms.join(" + ")+" + &epsilon;";nestedin.disabled=false;let opt;for(let i=0;i<newterms.length;i++){opt=document.createElement('option');opt.value=newterms[i];opt.appendChild(document.createTextNode(newterms[i]));nestedin.appendChild(opt);}
factors.push(f);computeLevels(0);recodeNestedFactors();setupLevels(fnum);fname.value="";levels.value=2;ftype.value='fixed';nestedin.value='-';let elem=document.getElementById("generate");elem.disabled=false;}else{console.log('good but duplicate name:'+name)}}else{console.log('bad name:'+name)}}
function separator(){let res=document.getElementById("result").value;let sep=document.getElementById("separator").value;if(sep=="."){res=res.replace(/\,/g,".");document.getElementById("separator").value=",";document.getElementById("separator").innerHTML="Dec. separator = , (comma)";}
else{res=res.replace(/\./g,",");document.getElementById("separator").value=".";document.getElementById("separator").innerHTML="Dec. separator = . (dot)";}
document.getElementById("result").value=res;}
function download(){let text=document.getElementById("result").value.trim();var blob=new Blob([text],{type:'text/plain;charset=utf-8'});saveAs(blob,'results.txt');}
function setupLevels(fnum){let f=factors[fnum];f.true_levels=f.levels;for(let i=0;i<f.nestedin.length;i++){f.true_levels*=factors[f.nestedin[i]].levels;}
let t=document.getElementById('tabs');let r=document.getElementById('tresults');let b=document.createElement('a');b.name=f.name;b.className='tabs';b.href="#!";b.innerHTML=f.name;b.onclick=function(){select(f.name)};t.insertBefore(b,r);let cts=document.getElementById('tab-contents');let res=document.getElementById('results');let d=document.createElement('div');d.className='tabcontent';d.id=f.name;let text='<h3>Labels for levels of Factor '+f.name+'</h3><table>';for(let i=0;i<f.true_levels;i++){text+='<tr><td><b>Level '+(i+1).toString();if(f.nested){text+='</b> nested in ';let lst=[];for(let j=0;j<f.nestedin.length;j++){lst.push(' Level '+(combins[i][j]+1).toString()+' of Factor '+factors[f.nestedin[j]].name);}
text+=lst.join(' and ');}
text+='</td><td><input type="text" class="label" value="'+(i+1).toString()+'"';text+=' onchange="ui.label(this)" ';text+=' id="flabel.'+fnum+'.'+i.toString()+'"></td></tr>';}
text+="</table>";d.innerHTML=text;d.style.display='none';cts.insertBefore(d,res);}
function reset(){factors=[];combins=[];terms=[];partial=[];recoded=[];location.reload();}
function recodeNestedFactors(){recoded=[...combins];for(let i=0;i<recoded.length;i++)recoded[i]=[...combins[i]];for(let i=0;i<factors.length;i++){if(factors[i].nested){let cmb=combins.length;let cumlevs=[];var codes=[];let nest_list=factors[i].nestedin;let other=1;let nestlevs=1;for(let l=0;l<i;l++){let lev=factors[l].levels;if(l>0)cumlevs[l]=cumlevs[l-1]*lev;else cumlevs[l]=lev;}
for(let l=0;l<factors.length;l++){if(l<i){if(nest_list.indexOf(l)!=-1)nestlevs*=factors[l].levels;}else{if(l!=i)other*=factors[l].levels;}}
codes=[...Array(nestlevs*factors[i].levels).keys()];for(let l=0;l<i;l++){if(nest_list.indexOf(l)==-1){let newcodes=[];let n=factors[l].levels;let blocks=cumlevs[l]/n;let chunks=codes.length/blocks;let start=0;for(let i=0;i<blocks;i++){let chunk=codes.slice(start,start+chunks);for(let j=0;j<n;j++)for(let c of chunk)newcodes.push(c);start+=chunks;}
let msg='Repeating ('+codes.join(' ')+') x '+n.toString()+' times: ';msg+='('+newcodes.join(' ')+')';codes=[...newcodes];}}
let newcodes=[];for(let c of codes){for(let l=0;l<other;l++)newcodes.push(c);}
for(let j=0;j<recoded.length;j++)recoded[j][i]=newcodes[j];}}}
function label(e){let name=e.value.trim().replace(/\s/gi,"_");if((name.match(/^[0-9a-z-.+_]+$/i))&&(name.length>0)){let id=e.id.split('.');let factor=parseInt(id[1]);let level=parseInt(id[2]);factors[factor].lcodes[level]=name;}}
function computeLevels(f){if(f==0)combins=[];if(f<factors.length){if(typeof partial[f]==='undefined')partial[f]=0;for(let i=0;i<factors[f].levels;i++){partial[f]=i;computeLevels(f+1);}}else{let t=[...partial];combins.push(t);}}
function generate(){let seed=document.getElementById("seed").value,average=parseFloat(document.getElementById("average").value),stdev=parseFloat(document.getElementById("stdev").value),replicates=parseInt(document.getElementById("replicates").value);if(seed!=""){var myRandom=new Math.seedrandom(seed.toString());jStat.setRandom(myRandom);}
createEffects(average,stdev);let line=[],text="",effect;for(let i=0;i<factors.length;i++){let nm=factors[i].orig_name;if(factors[i].ftype=='random')nm+='*';line.push(nm);}
text=line.join(' ')+' DATA\n';for(let i=0;i<recoded.length;i++){line=[];effect=0;for(let j=0;j<factors.length;j++){let level=recoded[i][j];effect+=factors[j].effects[level];line.push(factors[j].lcodes[level]);}
let c=line.join(' ');for(let j=0;j<replicates;j++){let y=jStat.normal.sample(average,stdev);text+=c+' '+(y+effect).toString()+'\n';}}
let elem=document.getElementById("result");elem.innerHTML=text;elem=document.getElementById("download");elem.disabled=false;document.getElementById("separator").disabled=false;}
function interacts(nst,trm){let f=nst.split(/[(*)]/).filter(Boolean);let t=trm.split(/[(*)]/).filter(Boolean);for(let i=0;i<f.length;i++){if(t.indexOf(f[i])!=-1)return false;}
return true;}
function select(name){let tabcontent=document.getElementsByClassName("tabcontent");for(let i=0;i<tabcontent.length;i++){if(tabcontent[i].id==name)tabcontent[i].style.display="block";else tabcontent[i].style.display="none";}}
return{addFactor:addFactor,select:select,reset:reset,generate:generate,download:download,label:label,separator:separator};}());document.addEventListener('DOMContentLoaded',function(){document.getElementById("results").style.display="none";chart.render();document.getElementById("average").addEventListener("change",function(){chart.setAverage(this.value)});document.getElementById("stdev").addEventListener("change",function(){chart.setStdev(this.value)});});